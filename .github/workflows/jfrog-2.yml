name: jfrog

on:
  workflow_dispatch:  # This enables manual trigger

env:
  # [Mandatory]
  # JFrog platform URL and access token for
  # a JFrog platform instance with active
  # JFrog Advanced Security subscription
  JF_URL: https://trialj8vw48.jfrog.io
  JF_TOKEN: ${{ secrets.JFROG_TOKEN }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Print runner name
      run: | 
          echo "Runner name is $RUNNER_NAME"
     
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          
    - name: Build with Maven
      run: mvn clean install

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: jar
        path: target/*.jar

    #- name: SonarCloud Scaning
      #run: mvn sonar:sonar -Dsonar.projectKey=surendradire_java-ci-gihub -Dsonar.organization=demo-org-key -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=2f515f13fa1f66d8619b8f604c87e2bacc7a8bc3

     #- name: Set up JFrog CLI
       #run: |
         #curl -fL https://getcli.jfrog.io | sh
         #sudo jf --version
         #sudo mv jfrog /usr/local/bin/
         #sudo jf --version

      #- name: Setup JFrog CLI
        #uses: jfrog/setup-jfrog-cli@v4.5.6
        #with:
          #version: 2.73.0  # Specify a version of JFrog CLI
          #download-repository: https://myartifactory.example.com/jfrog-cli
          #oidc-provider-name: my-oidc-provider  # OpenID Connect provider
          #oidc-audience: https://my-org.example.com
          #disable-job-summary: true  # Disable the job summary generation
          #disable-auto-build-publish: true  # Disable automatic build-info publishing
          #custom-server-id: my-custom-server-id  # Use a custom server ID for configuration

    - name: Setup Node.js
      uses: actions/setup-node@v4

    - name: Install and configure JFrog CLI
      run: |
        npm install -g jfrog-cli-v2-jf
        echo ${{ secrets.JFROG_TOKEN }} | jf c add --interactive=false --url=https://trialj8vw48.jfrog.io --access-token-stdin
        
    #- name: Configure JFrog CLI - Ankit
      #uses: jfrog/setup-jfrog-cli@v3
      #with:
        #version: latest
      #env:
        #JF_URL: https://trialj8vw48.jfrog.io
        #JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}
        
    - name: Upload JAR to JFrog
      run: |
         sudo jf rt u "target/*.jar" "repo-test/"     
